name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  FORCE_COLOR: 1

jobs:
  intel_build:
    name: Intel OneAPI build
    runs-on: ubuntu-20.04
    env:
      FC: mpiifort
      APT_PACKAGES: >-
        intel-oneapi-compiler-fortran
        intel-oneapi-mpi
        intel-oneapi-mpi-devel

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Add Intel repository
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update

    - name: Install Intel oneAPI compiler
      run: |
        sudo apt-get install ${{ env.APT_PACKAGES }}
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: Build ABIN
      run: cd src/; make clean && make

# test:
#   strategy:
#     fail-fast: false
#     matrix:
#       python: ["3.7", "3.13"]

#   runs-on: ubuntu-latest

#   steps:
#   - uses: actions/checkout@v4
#   - name: Set up Python ${{ matrix.python }}
#     uses: actions/setup-python@v5
#     with:
#       python-version: ${{ matrix.python }}

#   - name: Set up uv
#     uses: astral-sh/setup-uv@v1
#     with:
#         version: "0.4.20"

#   - name: Test script with `uv run`
#     run: |
#       uv run src/promdens/promdens.py --help
#       uv run src/promdens/promdens.py --plot --omega 0.2 --fwhm 5.0 -lch 0.001 -ns 3 -eu "eV" --npsamples 5 tests/test_data.txt
#       uv run src/promdens/promdens.py --plot --method=pdaw -lch 0.001 --omega 0.2 --fwhm 5.0 -ns 3 -eu "eV" --npsamples 5 tests/test_data.txt

